# -*- coding: utf-8 -*-
"""02_emotion_is_the_key.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/github/UFResearchComputing/gatorAI_summer_camp_2024/blob/main/02_emotion_is_the_key.ipynb

# Emotion is the key

This notebook creates a small program that takes an input of an emotion and outputs the title of a song that matches that emotion.

As input data, it links to a Google Sheet with the data collected from a Google Form where users enter songs and artits they associate with different emotions.
"""

# Import the necessary libraries
import pandas as pd
import numpy as np

# The ID of the Google Sheet and the gid of the worksheet
sheet_id = "1A8YVKxvEnF9OFdePQqdyBwzUG_o0n-WmJPprzdz74JU"
worksheet_gid = "1445035333"

# Construct the URL to download the Google Sheet as a CSV file
url = f"https://docs.google.com/spreadsheets/d/{sheet_id}/export?format=csv&gid={worksheet_gid}"

# Download the Google Sheet as a CSV file
df = pd.read_csv(url)

# Save the DataFrame as a CSV file in the current directory
df.to_csv("output.csv", index=False)

#df.head()

# Drop the first column of the DataFrame

df = df.drop(columns=["Timestamp"])

#df.head()

# Replace Column Header Names with simpler names
df.columns = ['Angry', 'Angry_Artist',
              'Fear', 'Fear_Artist',
              'Happy', 'Happy_Artist',
              'Neutral', 'Neutral_Artist',
              'Sad', 'Sad_Artist',
              'Surprise', 'Surprise_Artist',
              'Disgust', 'Disgust_Artist'
              ]

#df.head()


# Create a Function that takes the user input of an emotion and output a
# random song title with it's artist that matches that emotion

def lookup_song(emotion):
    # Format the emotion to have the first letter capitalized
    emotion = emotion.capitalize()

    # Set to 'nan ' to deal with missing titles/artists
    song_title = 'nan '
    artist = 'nan '

    # Check if the emotion is in the DataFrame
    if emotion not in df.columns:
        return "Invalid emotion! Please enter one of the following emotions: Angry, Fear, Happy, Neutral, Sad, Surprise, Disgust"

    # We don't want nan values for songs or artists
    while song_title == 'nan ' or artist == 'nan ':
      # Select a random value from 0 to len(df)
      random_index = np.random.randint(0, len(df))

      # Select the song title from the selected emotion
      song_title = df[emotion][random_index]

      # Get the artist for the song
      artist = df[emotion + "_Artist"][random_index]

    # Return the song title, artist and emotion
    return song_title, artist, emotion

def emotion_input_test(emotion):
    # Test the lookup_song function
    song_title, artist, emotion = lookup_song(emotion)
    print(f"The song title that matches the emotion '{emotion}' is: {song_title} by {artist}")

# Test the lookup_song function
#emotion_input_test('sad')

